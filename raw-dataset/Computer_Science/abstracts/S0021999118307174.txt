In this paper, we present a new limiter for discontinuous Galerkin (DG) schemes, based on subcell resolution through reconstructed flux correction, for hyperbolic conservation laws. This limitation technique is constructed by means of a subcell Finite Volume (FV) formulation. The algorithm is thus simple, and is able to retain the very high accurate subcell resolution of DG schemes. The main idea of this correction procedure is to preserve as much as possible the high accuracy and the very precise subcell resolution of DG schemes. Consequently, an a posteriori correction will only be applied locally at the subcell scale where it is needed, but still ensuring the scheme conservation. To do so, we first reformulate DG schemes as a subcell FV scheme provided the use of the correct numerical flux. This very simple development provides us with the so-called DG reconstructed flux. This theoretical part will serve as a basis for our limiter framework. Practically, at each time step, we compute a DG candidate solution and check if this solution is admissible (for instance positive, non-oscillating, â€¦). If it is the case, we go further in time. Otherwise, we return to the previous time step and correct locally, at the subcell scale, the numerical solution. This is why it is refereed to as a posteriori limitation. To this end, each cell is subdivided into subcells. Then, if the solution is locally detected as bad, we substitute the DG reconstructed flux on the subcell boundaries by a robust first-order or second-order TVD numerical flux. And for subcell detected as admissible, we keep the high-order reconstructed flux which allows us to retain the very high accurate resolution and conservation of the DG scheme. Furthermore, only the solution inside troubled subcells and its first neighbors will have to be recomputed, elsewhere the solution remains unchanged. Numerical results on various type problems and test cases will be presented, both in 1D and 2D on Cartesian grids, to assess the very good performance of the design limiting algorithm.