Pollen assemblages are used extensively across the globe, providing information on various characteristics of the vegetation communities that originally produced them, and how these vary temporally and spatially. However, anticipating a statistically based robust pollen count size, sufficient to characterise a pollen assemblage is difficult; particularly with regard to highly diverse pollen assemblages. To facilitate extraction of ecologically meaningful information from pollen assemblage data, a two part statistical sub-sampling tool has been developed (Models 1 and 2), which determines the pollen count size required to capture major vegetation communities of varying palynological richness and evenness, and the count size required to find the next not yet seen (rare) pollen taxa. The sub-sampling tool presented here facilitates the rapid assessment of individual pollen samples (initial information input of 100 pollen grains) and can, therefore, on a sample by sample basis achieve maximum effectiveness and efficiency. The sub-sampling tool is tested on fossil pollen data from five tropical sites. Results demonstrate that Model 1 predicts count sizes relating to palynological richness and evenness consistently. To characterise major vegetation community components model 1 indicates that, for samples with a lower richness and higher evenness lower count sizes than are considered standard can be used (<300, e.g. 122); however, for samples of high richness and low evenness, higher count sizes are required (>300, e.g. 870). Model 2 calculates the additional number of pollen grains needed to be counted to detect the next not yet seen pollen taxa, outputs were strongly related to input data count size as well as richness and evenness characteristics. We conclude that, given the temporal and spatial variations in vegetation communities and also pollen assemblages, pollen count sizes should be determined for each individual sample to ensure that effective and efficient data are generated and that detection of rare taxa is checked iteratively throughout the counting process.