Exoplanet science often involves using the system parameters of real exoplanets for tasks such as simulations, fitting routines, and target selection for proposals. Several exoplanet catalogues are already well established but often lack a version history and code friendly interfaces. Software that bridges the barrier between the catalogues and code enables users to improve the specific repeatability of results by facilitating the retrieval of exact system parameters used in articles results along with unifying the equations and software used. As exoplanet science moves towards large data, gone are the days where researchers can recall the current population from memory. An interface able to query the population now becomes invaluable for target selection and population analysis. ExoData is a Python interface and exploratory analysis tool for the Open Exoplanet Catalogue. It allows the loading of exoplanet systems into Python as objects (Planet, Star, Binary, etc.) from which common orbital and system equations can be calculated and measured parameters retrieved. This allows researchers to use tested code of the common equations they require (with units) and provides a large science input catalogue of planets for easy plotting and use in research. Advanced querying of targets is possible using the database and Python programming language. ExoData is also able to parse spectral types and fill in missing parameters according to programmable specifications and equations. Examples of use cases are integration of equations into data reduction pipelines, selecting planets for observing proposals and as an input catalogue to large scale simulation and analysis of planets. ExoData is a Python package available freely on GitHub. 1 1 https://github.com/ryanvarley/exodata. It’s open source and community contributions are encouraged. The package can be easily installed using pip install exodata, detailed setup information is provided within. Program summary Program title: ExoData Catalogue identifier: AFAL_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AFAL_v1_0.html Program obtainable from: CPC Program Library, Queen’s University, Belfast, N. Ireland Licensing provisions: GNU General Public License, version 3 No. of lines in distributed program, including test data, etc.: 21884 No. of bytes in distributed program, including test data, etc.: 608434 Distribution format: tar.gz Programming language: Python 2.7, 3.4, 3.5. Computer: Any. Operating system: Any. RAM: Less than 200MB Classification: 1.7. External routines: numpy, quantities, matplotlib, requests, astropy, seaborn, pandas, six Nature of problem: Being able to use exoplanet catalogue values in code including where there may be incomplete and incorrectly formatted values. Also being able to use the whole catalogue data at once, both for user querying, visualisation and in large simulation programs. Solution method: An interface to access the catalogue including filling in missing values and parsing of the catalogue data. Creating an API useable by both humans and other code, implementation of commonly used exoplanet equations, a plotting library. Running time: A few seconds depending on task