The efficient iteration of neighbouring particles is a performance critical aspect of any high performance smoothed particle hydrodynamics (SPH) solver. SPH solvers that implement a constant smoothing length generally divide the simulation domain into a uniform grid to reduce the computational complexity of the neighbour search. Based on this method, particle neighbours are either stored per grid cell or for each individual particle, denoted as Verlet list. While the latter approach has significantly higher memory requirements, it has the potential for a significant computational speedup. A theoretical comparison is performed to estimate the potential improvements of the method based on unknown hardware dependent factors. Subsequently, the computational performance of both approaches is empirically evaluated on graphics processing units. It is shown that the speedup differs significantly for different hardware, dimensionality and floating point precision. The Verlet list algorithm is implemented as an alternative to the cell linked list approach in the open-source SPH solver DualSPHysics and provided as a standalone software package. Program summary Program Title: DualSPHysics with GPU Verlet list implementation Program Files doi: http://dx.doi.org/10.17632/nsx8hfcycv.1 Licensing provisions: GPLv3 Programming language: C++, CUDA Nature of problem: SPH problems with particles in the order of less than 1 0 6 – 1 0 7 depending on the configuration. Solution method: Using dynamic Verlet lists to accelerate the SPH computation for certain configurations. Additional comments including Restrictions and Unusual features: The discussed parameter τ is managed by the added DualSPHysics command line parameter CELLINC.